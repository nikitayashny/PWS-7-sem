//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebForm.PWS_Lab5 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="A", Namespace="http://schemas.datacontract.org/2004/07/PWS_Lab5")]
    [System.SerializableAttribute()]
    public partial class A : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float FField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SField;



        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float F {
            get {
                return this.FField;
            }
            set {
                if ((this.FField.Equals(value) != true)) {
                    this.FField = value;
                    this.RaisePropertyChanged("F");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int K {
            get {
                return this.KField;
            }
            set {
                if ((this.KField.Equals(value) != true)) {
                    this.KField = value;
                    this.RaisePropertyChanged("K");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string S {
            get {
                return this.SField;
            }
            set {
                if ((object.ReferenceEquals(this.SField, value) != true)) {
                    this.SField = value;
                    this.RaisePropertyChanged("S");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PWS_Lab5.IWCFSiplex")]
    public interface IWCFSiplex {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFSiplex/Add", ReplyAction="http://tempuri.org/IWCFSiplex/AddResponse")]
        int Add(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFSiplex/Add", ReplyAction="http://tempuri.org/IWCFSiplex/AddResponse")]
        System.Threading.Tasks.Task<int> AddAsync(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFSiplex/Concat", ReplyAction="http://tempuri.org/IWCFSiplex/ConcatResponse")]
        string Concat(string s, double d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFSiplex/Concat", ReplyAction="http://tempuri.org/IWCFSiplex/ConcatResponse")]
        System.Threading.Tasks.Task<string> ConcatAsync(string s, double d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFSiplex/Sum", ReplyAction="http://tempuri.org/IWCFSiplex/SumResponse")]
        WebForm.PWS_Lab5.A Sum(WebForm.PWS_Lab5.A a1, WebForm.PWS_Lab5.A a2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFSiplex/Sum", ReplyAction="http://tempuri.org/IWCFSiplex/SumResponse")]
        System.Threading.Tasks.Task<WebForm.PWS_Lab5.A> SumAsync(WebForm.PWS_Lab5.A a1, WebForm.PWS_Lab5.A a2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFSiplexChannel : WebForm.PWS_Lab5.IWCFSiplex, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFSiplexClient : System.ServiceModel.ClientBase<WebForm.PWS_Lab5.IWCFSiplex>, WebForm.PWS_Lab5.IWCFSiplex {
        
        public WCFSiplexClient() {
        }
        
        public WCFSiplexClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFSiplexClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFSiplexClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFSiplexClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Add(int x, int y) {
            return base.Channel.Add(x, y);
        }
        
        public System.Threading.Tasks.Task<int> AddAsync(int x, int y) {
            return base.Channel.AddAsync(x, y);
        }
        
        public string Concat(string s, double d) {
            return base.Channel.Concat(s, d);
        }
        
        public System.Threading.Tasks.Task<string> ConcatAsync(string s, double d) {
            return base.Channel.ConcatAsync(s, d);
        }
        
        public WebForm.PWS_Lab5.A Sum(WebForm.PWS_Lab5.A a1, WebForm.PWS_Lab5.A a2) {
            return base.Channel.Sum(a1, a2);
        }
        
        public System.Threading.Tasks.Task<WebForm.PWS_Lab5.A> SumAsync(WebForm.PWS_Lab5.A a1, WebForm.PWS_Lab5.A a2) {
            return base.Channel.SumAsync(a1, a2);
        }
    }
}
